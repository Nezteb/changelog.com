<div class="ui basic segment">
  <h1 class="ui dividing header">
    <%= link("People", to: Routes.admin_person_path(@conn, :index)) %>
    &raquo;
    <%= @person.name %> (<%= @person.handle %>)
    <div class="ui basic right floated buttons">
      <%= link("View Public",
            to: Routes.person_path(@conn, :show, @person.handle),
            rel: "external",
            class: "ui button") %>
    </div>
    <div class="sub header">
      created: <%= AdminHelpers.ts(@person.inserted_at) %>
      &nbsp;&bull;&nbsp;
      joined: <%= if @person.joined_at, do: AdminHelpers.ts(@person.joined_at), else: "never" %>
      &nbsp;&bull;&nbsp;
      last signed in: <%= if @person.signed_in_at, do: AdminHelpers.ts(@person.signed_in_at), else: "never" %>
    </div>
  </h1>
</div>

<div class="actions right">
  <div class="ui basic buttons">
    <%= @person |> list_of_links() |> raw() %>
    <%= AdminHelpers.icon_link("edit", to: Routes.admin_person_path(@conn, :edit, @person)) %>
    <%= AdminHelpers.icon_link("slack", to: Routes.admin_person_path(@conn, :slack, @person, next: Routes.admin_person_path(@conn, :show, @person)), title: "Invite to Slack", method: :post, data: [confirm: "Are you sure?"]) %>
    <%= AdminHelpers.icon_link("trash", to: Routes.admin_person_path(@conn, :delete, @person), method: :delete, data: [confirm: "Are you sure?"]) %>
  </div>
</div>

<div class="ui basic segment">
  <h2 class="ui header">Subscribed To</h2>
<%= for subscription <- @subscriptions do %>
  <span class="ui large label"><%= subscription.podcast.name %></span>
<% end %>
<%= if is_subscribed(@person, Changelog.Newsletters.weekly()) do %>
  <span class="ui large label">Weekly</span>
<% end %>
<%= if is_subscribed(@person, Changelog.Newsletters.nightly()) do %>
  <span class="ui large label">Nightly</span>
<% end %>
</div>

<%= if Enum.any?(@published) do %>
<div class="ui basic segment">
  <h2 class="ui header">Recent news <%= link("(view all)", to: Routes.admin_person_path(@conn, :news, @person.id)) %></h2>
  <%= render(NewsItemView, "_table.html", Map.merge(assigns, %{status: :published, items: @published})) %>
</div>
<% end %>

<%= if Enum.any?(@declined) do %>
<div class="ui basic segment">
  <h2 class="ui header">Declined news</h2>
  <%= render(NewsItemView, "_table.html", Map.merge(assigns, %{status: :declined, items: @declined})) %>
</div>
<% end %>

<%= if Enum.any?(@episodes) do %>
<div class="ui basic segment">
  <h2 class="ui header">Guest episodes</h2>
  <%= render(EpisodeView, "_table.html", Map.merge(assigns, %{episodes: @episodes, status: :published})) %>
</div>
<% end %>

<%= if Enum.any?(@episode_requests) do %>
<div class="ui basic segment">
  <h2 class="ui header">Episodes requested</h2>
  <%= render(EpisodeRequestView, "_table.html", Map.merge(assigns, %{requests: @episode_requests})) %>
</div>
<% end %>

<%= if Enum.any?(@comments) do %>
<div class="ui basic segment">
  <h2 class="ui header">Recent comments <%= link("(view all)", to: Routes.admin_person_path(@conn, :comments, @person.id)) %></h2>
  <%= render(NewsItemCommentView, "_table.html", Map.merge(assigns, %{comments: @comments})) %>
</div>
<% end %>
